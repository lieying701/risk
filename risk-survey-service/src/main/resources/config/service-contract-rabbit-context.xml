<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/rabbit
    	   http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

    <bean id="jsonMessageConverter"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>

    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="500"/>
                <property name="multiplier" value="10.0"/>
                <property name="maxInterval" value="10000"/>
            </bean>
        </property>
    </bean>
    <!-- springmvc返回支持json类型   -->    
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" >
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    

    <!--  <rabbit:connection-factory id="connectionFactory"
                               host="${mq.host}" username="${mq.username}" password="${mq.password}"
                               port="${mq.port}" virtual-host="${mq.vhost}"></rabbit:connection-factory>-->
    <rabbit:connection-factory id="connectionFactory" host="${mq.rabbit.host}"  username="${mq.rabbit.username}" password="${mq.rabbit.password}"  port="${mq.rabbit.port}" 
            virtual-host="${mq.rabbit.vhost}"  channel-cache-size="${mq.rabbit.channel-cache-size}"/>
    
    <!-- <rabbit:connection-factory id="connectionFactory" host="${mq.host}"
        username="${mq.username}" password="${mq.password}" port="${mq.port}" virtual-host="${mq.vhost}"
        publisher-confirms="true"></rabbit:connection-factory> -->


    <rabbit:admin id="connectionAdmin" connection-factory="connectionFactory"></rabbit:admin>

    <rabbit:queue id="CONTRACT_QUEUE" name="CONTRACT_QUEUE"
                  durable="true" auto-delete="false" exclusive="false" declared-by="connectionAdmin"/>
    <rabbit:queue id="TASK_COLLECTION_DEFAULT_QUEUE" name="TASK_COLLECTION_DEFAULT_QUEUE"
                  durable="true" auto-delete="false" exclusive="false" declared-by="connectionAdmin"/>


    <rabbit:direct-exchange name="CONTRACT_EXCHANGE"
                            durable="true" auto-delete="false" id="CONTRACT_EXCHANGE" declared-by="connectionAdmin">
        <rabbit:bindings>
            <rabbit:binding queue="CONTRACT_QUEUE" key="ROUTING_CONTRACT_QUEUE"/>
            <rabbit:binding queue="TASK_COLLECTION_DEFAULT_QUEUE" key="WB_TASK_COLLECTION_DEFAULT_KEY"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <rabbit:template exchange="CONTRACT_EXCHANGE" id="amqpTemplate"
                     connection-factory="connectionFactory" message-converter="jsonMessageConverter"
                     retry-template="retryTemplate"></rabbit:template>

    <!-- <rabbit:template exchange="CONTRACT_EXCHANGE" id="amqpTemplate" connection-factory="connectionFactory"
        message-converter="jsonMessageConverter" routing-key="ROUTING_CONTRACT_QUEUE"
        confirm-callback="confirmCallbackListener" return-callback="returnCallbackListener"
        mandatory="true" retry-template="retryTemplate"></rabbit:template> -->

    <!--listener -->

    <!--<rabbit:listener-container-->
            <!--connection-factory="connectionFactory" acknowledge="auto">-->
        <!--<rabbit:listener queues="CONTRACT_QUEUE" ref="queueListener"/>-->
    <!--</rabbit:listener-container>-->

    <!-- <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="CONTRACT_QUEUE" ref="receiveConfirmListener" />
        </rabbit:listener-container> -->


</beans>
